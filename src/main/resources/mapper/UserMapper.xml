<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.UserMapper">
    <select id="findAllUser" resultType="com.example.VO.UserInfo">
        select * from users
        <where>
            <if test="userName!=null &amp; userName !=''">
                and user_name = #{userName}
            </if>
            <if test="userStatus!=null">
                and user_status = #{userStatus}
            </if>
        </where>
        limit #{page},#{limit};
    </select>
    <select id="findUserById" resultType="com.example.pojo.Users">
        select * from  users where id = #{id};
    </select>
    <select id="findUser" resultType="com.example.VO.UserInfo">
        select * from users where login_account = #{username} and user_pwd = MD5(#{password});
    </select>
    <insert id="addUser">
        insert into users (login_account,user_name,user_pwd,role_id,email,entry_date,resign_date,user_status) values (#{loginAccount},#{userName},md5(#{userPwd}),#{roleId},#{email},#{entryDate},#{resignDate},#{userStatus})
    </insert>
    <update id="updateUser" parameterType="com.example.pojo.Users">
        update users set login_account = #{loginAccount}, user_name = #{userName}, role_id = #{roleId}, email = #{email}, resign_date = #{resignDate} where id = #{id}
    </update>
    <delete id="delUserById">
        delete from users where id = #{id}
    </delete>
    <update id="updatePassword">
        update users set user_pwd = md5(#{newPassword})  where login_account = #{username};
    </update>
    <select id="findAllRole" resultType="com.example.VO.RoleInfo">
        select * from roles
            <where>
                <if test="roleName!=null &amp; roleName!=''">
                    and role_name = #{roleName}
                </if>
                <if test="roleStatus!=null">
                    and role_status = #{roleStatus}
                </if>
            </where>
            <if test="page!=null">
                limit #{page},#{limit};
            </if>
    </select>
    <select id="countRoles" resultType="_int">
        select count(*) from roles
        <where>
            <if test="roleName!=null &amp; roleName!=''">
                and role_name = #{roleName}
            </if>
            <if test="roleStatus!=null">
                and role_status = #{roleStatus}
            </if>
        </where>
        <if test="page!=null">
            limit #{page},#{limit};
        </if>
    </select>
    <select id="countUsers" resultType="_int">
        select count(*) from users
        <where>
            <if test="userName!=null">
                or user_name = #{userName}
            </if>
            <if test="userStatus!=null">
                or user_status = #{userStatus}
            </if>
        </where>
        <if test="page!=null">
            limit #{page},#{limit};
        </if>
    </select>
    <insert id="addRole">
        insert into roles (role_name,user_id) values(#{roleName},#{userId});
    </insert>
    <select id="findRoleById" resultType="com.example.pojo.Role">
        select * from roles where id = #{roleId};
    </select>
    <select id="getRoleList" resultType="com.example.pojo.Role">
        select * from roles;
    </select>
    <delete id="delRoleById">
        delete from roles where id = #{id};
    </delete>
    <update id="updateRole">
        update roles set role_name = #{roleName} where id = #{roleId}
    </update>
    <update id="changeRoleStatus">
        update roles set role_status = #{roleStatus} where id = #{id}
    </update>
    <update id="changeUserStatus">
        update users set user_status = #{userStatus} where id = #{id}
    </update>


</mapper>
